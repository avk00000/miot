Hardware Connections : 
Connect the HC-05 to Arduino:
•	HC-05 VCC → Arduino 5V
•	HC-05 GND → Arduino GND
•	HC-05 TX → Arduino RX (pin 0)
•	HC-05 RX → Arduino TX (pin 1)
•	HC-05 EN/KEY → leave unconnected (unless configuring AT commands)


Arduino Side Code :
void setup() {
  Serial.begin(9600); // HC-05 default baud
}

void loop() {
  Serial.println("Hello Pi");
  delay(1000);

  // If Pi sends data back
  if (Serial.available()) {
    char c = Serial.read();
    // Echo received char back
    Serial.print("Got from Pi: ");
    Serial.println(c);
  }
}


Raspberry Pi  Side :
On Raspberry Pi:
1.	Run following command in terminal :
sudo apt update && sudo apt upgrade –y
sudo apt install -y bluetooth bluez bluez-tools rfcomm python3-serial
2.	Turn on Bluetooth (bluetoothctl)
3.	Run the following commands in terminal:
bluetoothctl
power on
agent on
scan on
4.	Note down the MAC address of HC-05 (something like 00:18:E4:35:9D:8B).
5.	Pair and connect:
pair XX:XX:XX:XX:XX:XX
trust XX:XX:XX:XX:XX:XX
connect XX:XX:XX:XX:XX:XX
6.	Run the following commands in terminal: 
            scan off
            quit
            ls /dev/rfcomm*
            sudo rfcomm release 0    
            sudo rfcomm bind 0 XX:XX:XX:XX:XX:XX
            ls -l /dev/rfcomm0
            python3 bt_connect.py  
      

Raspberry Pi Python Application:
 Python script (bt_connect.py):
import serial
import time

# Connect to HC-05 serial port
bt = serial.Serial("/dev/rfcomm0", baudrate=9600, timeout=1)

while True:
    # Read data from Arduino
    data = bt.readline().decode('utf-8').strip()
    if data:
        print("From Arduino:", data)

    # Send message to Arduino
    bt.write(b'H')  
    time.sleep(2) import serial
import time

# Connect to HC-05 serial port
bt = serial.Serial("/dev/rfcomm0", baudrate=9600, timeout=1)

while True:
    # Read data from Arduino
    data = bt.readline().decode('utf-8').strip()
    if data:
        print("From Arduino:", data)

    # Send message to Arduino
    bt.write(b'H')  
    time.sleep(2)
